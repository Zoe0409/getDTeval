% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/benchmark.getDTeval.R
\name{benchmark.getDTeval}
\alias{benchmark.getDTeval}
\title{benchmark.getDTeval}
\source{
getDTeval::getDTeval
}
\usage{
benchmark.getDTeval(
  the.statement,
  times = 30,
  seed = 47,
  envir = .GlobalEnv,
  ...
)
}
\arguments{
\item{the.statement}{a character value expressing a data.table calculation, such as \code{dt[Age < 50, .(mean(Income)), by = "Region"]}. When the.statement includes variables that are called by reference to a naming constant using get() or eval(), then these statements are translated into the names of the variables for substantial improvements in speed.}

\item{times}{The number of iterations to run the benchmarking experiment.}

\item{seed}{an integer value specifying the seed of the pseudorandom number generator.}

\item{envir}{The environment in which the calculation takes place, with the global environment .GlobalEnv set as the default.}

\item{...}{additional arguments to be passed.}
}
\description{
Performs a benchmarking experiment for data.table coding statements that use get() or eval() for programmatic designs.  The a) original statement is compared to b) passing the original statement through getDTeval and also to c) an optimized coding statement.  The results can demonstrate the overall improvement of using the coding translations offered by getDTeval().
}
